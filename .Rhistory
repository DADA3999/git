ls
plot(nikkei)
data(Nikkei225)
data(Nikkei225)
library( TSSS )
plot(Rainfall,type="h") #2年間の降水割合
# 日経225データ
data( Nikkei225 )
# 日経225データ
data( Nikkei225 )
plot(Nikkei225)
plot(Nikkei225)
y <- log( Nikkei225 )
z <- diff( y )
plot( z )
data
Nikkei225$cov
Nikkei225
acf(Nikkei225)
acf(Nikkei225,lag.max=50)
acf(Nikkei225,lag.max=100)
acf(Nikkei225,lag.max=20)
acf(Nikkei225,type="covariance")
acf(Nikkei225,type="covariance",main="Nikken225の標本自己共分散")
acf(Nikkei225,type="covariance",main="Nikkei225の標本自己共分散")
acvfNikkeirate=acvfNikkeirate$acf
acvfNikkeirate=acvfNikkeirate$acf
acvfNikkeirate$acf
acvfNikkeirate<-acvfNikkeirate$acf
# acf(Nikkei225,type="covariance",main="Nikkei225の標本自己共分散")
a=acf(Nikkei225,type="covariance")
head(a)
period(Nikkei225,window=0)
spec.pgram(Nikkei225)
# acf(Nikkei225,type="covariance",main="Nikkei225の標本自己共分散")
# a=acf(Nikkei225,type="covariance")
# a=a$acf
par(mar=c(2,2,2,1)+0.1)
b=spec.pgram(Nikkei225)
b=spec.pgram(Nikkei225,window=0)
period(Nikkei225,window=0)
warning()
z1 <- arfit( log(lynx), lag=20, method=1 )
z1 <- arfit( z, lag=20, method=1 )
# z1 <- arfit( z, lag=20, method=1 )
# z1 <- arfit( z, lag=20, method=1 )
acf(Nikkei225,type="covariance")
acf(,type="covariance")
acf(z,type="covariance")
# par(mar=c(2,2,2,1)+0.1)
b=period(z)
# par(mar=c(2,2,2,1)+0.1)
b=spec.pgram(z)
z1 <- arfit( z, lag=20, method=1 )
library(TSSS)
z1 <- arfit(z,lag=20,method=1)
z1 <- arfit(z,lag=20,method=1)
arfit(z,lag=20,method=1)
# a=acf(z,type="covariance",main="Nikkei225の標本自己共分散")
par(mar=c(2,2,2,1)+0.1)
c=arfit(z,lag=20,method=1)
c$sigma2[1]
c <- arfit(z,lag=20,method=1)
par(mar=c(2,2,2,1)+0.1)
c$sigma2[1]
c$sigma2[1]
x <- arfit(z,lag=20,method=1)
library(TSSS)
data( Nikkei225 )
x$sigma2[5]    # AR(5)の 誤差分散を表示
x <- arfit(z,lag=20,method=1)
par(mar=c(1,1,1)+0.1)
par(mar=c(1,1,1,1)+0.1)
x <- arfit(z,lag=20,method=1)
z1 <- arfit(z,lag=20,method=1)
x$sigma2
x$sigma2[5]
x$arcoef[[5]]
lines( z1$aic)
z1 <- arfit(z,lag=20,method=1)
par( mfrow=c(2,1),mar=c(2,2,1,1) )
z1 <- arfit(z,lag=20,method=1)
library(TSSS)
plot( z1$aic,type="h")
plot( z1$aic,type="h",main="AIC")
plot( z1$sigma,type="b",main="sigma")
plot( z1$aic,type="h",main="AIC")
lines( z1$aic)
summary(Nikkei225)
nrow(Nikkei225)
ncol(Nikkei225)
length(Nikkei225)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
library(TSSS)
v0 <- NULL
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
z800 <- z[1:800]
z1 <- arfit(z800,plot=FALSE)
tau2 <- z1$sigma2
# m = maice.order, k=1
m1 <- z1$maice.order
arcoef <- z1$arcoef[[m1]]
f <- matrix(0.0e0, m1, m1)
f[1, ] <- arcoef
if (m1 != 1)
for (i in 2:m1) f[i, i-1] <- 1
g <- c(1, rep(0.0e0, m1-1))
h <- c(1, rep(0.0e0, m1-1))
q <- tau2[m1+1]
r <- 0.0e0
x0 <- rep(0.0e0, m1)
v0 <- NULL
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
par(mar=c(1,1,1,1)+0.1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, Lynx)
plot(s1, z)
par(mar=c(1,1,1,1)+0.1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z)
plot(s1, z,xlim=c(700,1000))
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1000))
plot(s1, z,xlim=c(700,1000),ylim=c(-10,10))
plot(s1, z,xlim=c(700,1000),ylim=c(-10,10))
plot(s1, z,xlim=c(700,1000))
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465,ylim=c(-10,10))
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1000))
plot(s1, z,xlim=c(700,1465))
par(mar=c(1,1,1,1)+1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1465))
plot(s1, z,xlim=c(700,1465),ylim=c(-0.1,0.1))
plot(s1, z,xlim=c(700,1465),ylim=c((-0.1,0.1),(-0.1,0.1))
plot(s1, z,xlim=c(700,1465),ylim=c((-0.1,0.1)(-0.1,0.1))
s1,s2 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1[1], z,xlim=c(700,1465),ylim=c((-0.1,0.1))
plot(s1[1], z,xlim=c(700,1465),ylim=c(-0.1,0.1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1[1], z,xlim=c(700,1465),ylim=c(-0.1,0.1)
plot(s1[1], z,xlim=c(700,1465),ylim=c(-0.1,0.1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1[1], z,xlim=c(700,1465),ylim=c(-0.1,0.1)
plot(s1[2], z,xlim=c(700,1465),ylim=c(-0.1,0.1)
s1
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1465),ylim=c(-0.1,0.1)
plot(s1[2], z,xlim=c(700,1465),ylim=c(-0.1,0.1)
par(mar=c(1,1,1,1)+1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1465),ylim=c(-0.1,0.1)
plot(s1, z,xlim=c(700,1465),ylim=c(-0.1,0.1))
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1[1], z,xlim=c(700,1465),ylim=c(-0.1,0.1))
plot(s1, z,xlim=c(700,1465),ylim=c(-0.1,0.1))
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1465))
s1[1]
s1[2]
s1[3]
z1 <- arfit(z800,plot=FALSE,lag=10)
tau2 <- z1$sigma2
# m = maice.order, k=1
m1 <- z1$maice.order
arcoef <- z1$arcoef[[m1]]
f <- matrix(0.0e0, m1, m1)
f[1, ] <- arcoef
if (m1 != 1)
for (i in 2:m1) f[i, i-1] <- 1
g <- c(1, rep(0.0e0, m1-1))
h <- c(1, rep(0.0e0, m1-1))
q <- tau2[m1+1]
r <- 0.0e0
x0 <- rep(0.0e0, m1)
v0 <- NULL
par(mar=c(1,1,1,1)+1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1465))
z1 <- arfit(z800,plot=FALSE,lag=1)
tau2 <- z1$sigma2
# m = maice.order, k=1
m1 <- z1$maice.order
arcoef <- z1$arcoef[[m1]]
f <- matrix(0.0e0, m1, m1)
f[1, ] <- arcoef
if (m1 != 1)
for (i in 2:m1) f[i, i-1] <- 1
g <- c(1, rep(0.0e0, m1-1))
h <- c(1, rep(0.0e0, m1-1))
q <- tau2[m1+1]
r <- 0.0e0
x0 <- rep(0.0e0, m1)
v0 <- NULL
par(mar=c(1,1,1,1)+1)
s1 <- tsmooth(z800, f, g, h, q, r, x0, v0, filter.end = 800,predict.end = 1465)
plot(s1, z,xlim=c(700,1465))
x <- read.csv("nikkei.csv")
print("r")
x
length(x)
x <- read.csv("nikkei.csv")
x <- read.csv("nikkei.csv",header=TRUE)
install.packages("tseries")
library(tseries)
x<-c(100.06,
100.04,
100.075,
100.066,
100.061,
100.041,
100.053,
100.113,
100.073,
100.11,
100.115,
100.067
)
sd(var)
sd(x)
setwd("~/RStudio/report3")
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
help(tvvar)
tt
tt[,4]
length(tt[,4])
tt[0]
tt[1]
tt
tt[,5]
tt[,6]
tt[,7]
nrow(tt)
ncol(tt)
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
help(ngsmth)
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report2/cov_and_periodgram.r')
source('~/RStudio/report3/graph.r')
source('~/RStudio/report3/graph.r')
help(ngsmth)
help(plot)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
help(ngsmth)
warnings()
help(ngsmth)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
warnings()
help(ngsmth)
source('~/.active-rstudio-document', encoding = 'UTF-8')
warnings()
help(ngsmth)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
s3
pi*pi/6
help(tvvar)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
help(tvvar)
help(ngsmth)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
s3$smt
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
